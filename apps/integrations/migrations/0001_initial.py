# Generated by Django 5.2 on 2025-06-28 13:06

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ExternalAPICall",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("endpoint", models.CharField(max_length=500)),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("GET", "GET"),
                            ("POST", "POST"),
                            ("PUT", "PUT"),
                            ("PATCH", "PATCH"),
                            ("DELETE", "DELETE"),
                        ],
                        max_length=10,
                    ),
                ),
                ("request_data", models.JSONField(blank=True, default=dict)),
                ("response_data", models.JSONField(blank=True, default=dict)),
                ("response_status", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("duration_ms", models.PositiveIntegerField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("retry_count", models.PositiveIntegerField(default=0)),
                ("correlation_id", models.CharField(blank=True, max_length=100)),
            ],
            options={
                "verbose_name": "External API Call",
                "verbose_name_plural": "External API Calls",
                "db_table": "external_api_calls",
            },
        ),
        migrations.CreateModel(
            name="IntegrationHealth",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_healthy", models.BooleanField(default=True)),
                ("last_check_at", models.DateTimeField(auto_now_add=True)),
                (
                    "response_time_ms",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("consecutive_failures", models.PositiveIntegerField(default=0)),
                ("last_error_message", models.TextField(blank=True)),
                (
                    "circuit_breaker_state",
                    models.CharField(
                        choices=[
                            ("closed", "Closed"),
                            ("open", "Open"),
                            ("half_open", "Half Open"),
                        ],
                        default="closed",
                        max_length=20,
                    ),
                ),
            ],
            options={
                "verbose_name": "Integration Health",
                "verbose_name_plural": "Integration Health",
                "db_table": "integration_health",
            },
        ),
        migrations.CreateModel(
            name="IntegrationProvider",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("user_service", "User Management Service"),
                            ("payment_service", "Payment Service"),
                            ("communication_service", "Communication Service"),
                        ],
                        max_length=100,
                    ),
                ),
                ("webhook_url", models.CharField(max_length=500)),
                ("api_base_url", models.URLField()),
                (
                    "auth_type",
                    models.CharField(
                        choices=[
                            ("api_key", "API Key"),
                            ("oauth2", "OAuth2"),
                            ("bearer_token", "Bearer Token"),
                        ],
                        max_length=20,
                    ),
                ),
                ("secret_key", models.CharField(max_length=255)),
                ("config", models.JSONField(default=dict)),
                ("is_active", models.BooleanField(default=True)),
                ("rate_limit_per_minute", models.PositiveIntegerField(default=100)),
                ("burst_limit", models.PositiveIntegerField(default=20)),
                ("max_retries", models.PositiveIntegerField(default=3)),
                ("backoff_multiplier", models.FloatField(default=2.0)),
                ("max_backoff_seconds", models.PositiveIntegerField(default=300)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Integration Provider",
                "verbose_name_plural": "Integration Providers",
                "db_table": "integration_providers",
            },
        ),
        migrations.CreateModel(
            name="WebhookEvent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("event_type", models.CharField(max_length=100)),
                ("event_id", models.CharField(max_length=100, unique=True)),
                ("organization_id", models.CharField(blank=True, max_length=100)),
                ("data", models.JSONField(default=dict)),
                ("metadata", models.JSONField(default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("retry", "Retry"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("retry_count", models.PositiveIntegerField(default=0)),
                ("error_message", models.TextField(blank=True)),
                ("received_at", models.DateTimeField(auto_now_add=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("next_retry_at", models.DateTimeField(blank=True, null=True)),
                ("source_ip", models.GenericIPAddressField(blank=True, null=True)),
                ("headers", models.JSONField(default=dict)),
            ],
            options={
                "verbose_name": "Webhook Event",
                "verbose_name_plural": "Webhook Events",
                "db_table": "webhook_events",
            },
        ),
    ]
